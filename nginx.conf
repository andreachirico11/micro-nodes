upstream s1 { server micro-crypt; }
upstream s2 { server micro-auth; }
upstream s3 { server micro-static; }
upstream s4 { server micro-data; }

server {
  listen 80;
  server_name nodemicrosss.top www.nodemicrosss.top;
  
  # Redirect all HTTP requests to HTTPS
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name nodemicrosss.top www.nodemicrosss.top;


  # SSL Configuration
  ssl_certificate /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  
  # SSL Settings
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;



  location /crypt {
    proxy_pass http://s1;
    rewrite ^/crypt(.*)$ $1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
    
  location /auth {
    proxy_pass http://s2;
    rewrite ^/auth(.*)$ $1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /static {
    proxy_pass http://s3;
    rewrite ^/static(.*)$ $1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    client_max_body_size 100M;
  }
  
  location /data {
    proxy_pass http://s4;
    rewrite ^/data(.*)$ $1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}