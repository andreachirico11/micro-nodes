#IMPORTANT
#if microservices are used with proxy remove ports and set PORT variable to 80
#the proxy must not be changed, is configured inside it's own file
#connection between services uses the internal name

services:
  micro-proxy:
    container_name: micro-proxy
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro


  micro-auth:
    container_name: micro-auth
    build: ./micro-node-auth
    #ports:
    #  - "x:y" 
    environment:
      - PRODUCTION=true
      - PORT=80 # the same of internal ports if used
      - BASE_URL=
      - DB_HOST=mysql_db
      - DB_NAME=
      - DB_PASSWORD=
      - DB_USER=
      - DB_PORT=3306
      - ADMIN_CRUDS=false
      - MICRO_HASH_URI=http://micro-crypt
    depends_on:
      - micro-crypt
      - mysql
  
  micro-crypt:
    container_name: micro-crypt
    build: ./micro-node-crypt
    # ports:
    #   - "x:y"
    environment:
      - PRODUCTION=
      - PORT=
      - BASE_URL=

  micro-data:
    container_name: micro-data
    build: ./micro-node-data
    # ports:
    #   - "x:y"
    environment:
      - PRODUCTION=true
      - PORT=80 # the same of internal ports if used
      - MICRO_AUTH_URI=
      - BASE_URL=api
      - MONGO_URI=
      - BYPASS_AUTH=
    depends_on:
      - mongo
  
  micro-static:
    container_name: micro-static
    build: ./micro-node-static-files
    # ports:
    #   - "x:y"
    environment:
      - PRODUCTION=true
      - PORT=80 # the same of internal ports if used
      - BASE_URL=
      - STORAGE_PATH= # the path inside the container where files will be stored
      - DB_HOST=mysql_db
      - DB_NAME=
      - DB_PASSWORD=
      - DB_USER=
      - DB_PORT=3306
      - MICRO_AUTH_URI=http://micro-auth
    volumes:
    - <<STATIC VOLUME NAME>>: # container storage_path variable 
    depends_on:
      - micro-auth
      - mysql_db

  mongo:
    container_name: data
    image: mongo:latest
    ports:
      - "x:y"
    volumes:
      - mongo-data:/data/<<VOLUME NAME>>
    environment:
      - MONGO_INITDB_ROOT_USERNAME=
      - MONGO_INITDB_ROOT_PASSWORD=admn
    command: [ --auth ]

  mysql:
    container_name: mysql_db
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=
      # - MYSQL_DATABASE= this is not compulsory 
      - MYSQL_USER=
      - MYSQL_PASSWORD=
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306" #must be the same of the one used by services

volumes:
  mongo-data:
  mysql_data:
  <<STATIC VOLUME NAME>>: